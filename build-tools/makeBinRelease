#!/bin/bash
# Generate release tar file static-compiled binaries 
# Must be run after tree is tagged and pushed to master.
# Use --keep to keep working directory for debugging.

mydir=$(dirname $(which $0))
source ${mydir}/releaseLib.sh

keep=no
if [ $1 -eq '--keep' ] ; then
    keep=yes
fi
set -beEu -o pipefail

buildDir=$(realpath -m build)
binBuildDir="${buildDir}/bin-tmp"

set -x
rm -rf ${binBuildDir}
mkdir -p ${binBuildDir}
cd ${binBuildDir}
git clone --recursive https://github.com/ComparativeGenomicsToolkit/cactus.git
cd cactus
git fetch --tags origin

REL_TAG=$(getLatestReleaseTag)
git checkout "${REL_TAG}"
git submodule update --init --recursive

if [ -z ${CACTUS_LEGACY_ARCH+x} ]
then
	 export CACTUS_ARCH="haswell"
else
	 export CACTUS_ARCH="nocona"
fi

export CFLAGS="-march=${CACTUS_ARCH} -static"
export CXXFLAGS="-march=${CACTUS_ARCH} -static"
export LDFLAGS="-march=${CACTUS_ARCH} -static"

# install Phast and enable halPhyloP compilation
build-tools/downloadPhast
export ENABLE_PHYLOP=1

make -j $(nproc) check-static

# download all external tools used for pangenome pipeline
# (only works for newer architectures as vg and some other binaries are built with -march=nehalem)
# todo: should try to just use nocona for everything and make one release 
if [ -z ${CACTUS_LEGACY_ARCH+x} ]	
then
	 build-tools/downloadPangenomeTools 1
fi

binPackageDir=cactus-bin-${REL_TAG}
rm -rf ${binPackageDir}
mkdir ${binPackageDir}
cp -r bin src examples ${binPackageDir}
cp *.md *.py *.txt ${binPackageDir}
# sonLib needed for pip install
find submodules/sonLib -name '*.py' | cpio -pdum ${binPackageDir}
# install the hal python libraries, requires PYTHONPATH set by user.
# todo: probably a better way
mkdir -p $(binPackageDir)/lib
rsync -avm --include='*.py' -f 'hide,! */' ./submodules/hal ${binPackageDir}/lib
# need .git dir for pip install -U ., but don't need everything
cp -r .git ${binPackageDir}
rm -rf ${binPackageDir}/.git/modules
# remove test executables
rm -f ${binPackageDir}/bin/*test ${binPackageDir}/bin/*tests ${binPackageDir}/bin/*Test ${binPackageDir}/bin/*Tests ${binPackageDir}/bin/cactus_runEndAlignment
# make binaries smaller
strip -d ${binPackageDir}/bin/* 2> /dev/null || true
if [ -z ${CACTUS_LEGACY_ARCH+x} ]	
then
	 outArchive=${buildDir}/cactus-bin-${REL_TAG}.tar.gz
else
	 outArchive=${buildDir}/cactus-bin-legacy-${REL_TAG}.tar.gz
fi
tar -czf ${outArchive} ${binPackageDir}
if [ "$keep" = "no" ] ; then
    rm -Rf ${binBuildDir} ${binPackageDir}
fi
